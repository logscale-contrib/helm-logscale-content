{{- $fullName := include "logscale-content.fullname" . -}}
{{- $labels := include "logscale-content.labels" . -}}
{{- $managedClusterName := .Values.managedClusterName -}}
{{- $prefix := .Values.repositoryDefault.repoPrefix -}}
{{- $suffix := .Values.repositoryDefault.repoSuffix -}}
{{- $ingestSizeInGB := .Values.repositoryDefault.ingestSizeInGB -}}
{{- $storageSizeInGB := .Values.repositoryDefault.storageSizeInGB -}}
{{- $timeInDays := .Values.repositoryDefault.timeInDays -}}
{{- $allowDataDeletion := .Values.repositoryDefault.allowDataDeletion -}}
{{- range .Values.repositories }}
{{- if .create | default true }}
{{- $crName := print $fullName "-" .name  }}
{{- $repoName := print $prefix .name $suffix }}
apiVersion: core.humio.com/v1alpha1
kind: HumioRepository
metadata:
  name: {{ $crName }}
  labels:
    {{- $labels | nindent 4 }}  
spec:
  allowDataDeletion: {{ .allowDataDeletion | default $allowDataDeletion }}
  {{- if .description }}
  description: {{ .description }}
  {{- end }}
  managedClusterName: {{ $managedClusterName }}
  name: {{ $repoName }}
  retention:
    ingestSizeInGB: {{ .ingestSizeInGB | default  $ingestSizeInGB }}
    storageSizeInGB: {{ .storageSizeInGB | default $storageSizeInGB }}
    timeInDays: {{ .timeInDays | default $timeInDays }}
---
{{- range .parsers }}
apiVersion: core.humio.com/v1alpha1
kind: HumioParser
metadata:
  name: {{ $crName }}-{{ .name }}
  labels:
    {{- $labels | nindent 4 }}  
spec:
  managedClusterName: {{ $managedClusterName }}
  repositoryName: {{ $repoName }}
  {{ toYaml . | nindent 2 }}  
---
{{- end }}
{{- range .ingestTokens }}
{{- $itName := print $crName "-" .name  -}}
apiVersion: core.humio.com/v1alpha1
kind: HumioIngestToken
metadata:
  name: {{ $itName }}
  labels:
    {{- $labels | nindent 4 }}  
spec:
  managedClusterName: {{ $managedClusterName }}
  name: {{ .name }}
  repositoryName: {{ $repoName }}
  {{- if or ( .createSecret | default true ) .tokenSecretName }}
  tokenSecretName: {{ .tokenSecretName | default $itName }}
  {{- end }}
  {{- if .parserName }}
  parserName: {{.parserName }}
  {{- end }}
---
{{- if .eso }}
{{- if .eso.push }}
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: {{ .eso.name | default $itName }}
spec:
  refreshInterval: {{ .eso.refreshInterval | default "10s" | quote }} # Refresh interval for which push secret will reconcile
  secretStoreRefs: 
{{ toYaml $.Values.eso.secretStoreRefs | indent 4 }}
  selector:
    secret:
      name: {{ .tokenSecretName | default $itName }}
  data:
    - match:
        secretKey: {{ .eso.secretKey | default "token" }} # Source Kubernetes secret key to be pushed
        remoteRef:
          remoteKey: {{ .eso.remoteKey | default .tokenSecretName }} # Remote reference (where the secret is going to be pushed)
---          
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
